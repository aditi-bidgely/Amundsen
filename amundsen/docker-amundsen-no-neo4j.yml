
version: '3'
services:
  
  elasticsearch:
      image: elasticsearch:6.7.0
      container_name: es_amundsen
      ports:
          - 9200:9200
      volumes:
        - es_data:/usr/share/elasticsearch/data
      networks:
        - amundsennet
      ulimits:
        nofile:
          soft: 65536
          hard: 65536
  amundsensearch:
      image: amundsendev/amundsen-search:2.4.1
      container_name: amundsensearch
      ports:
        - 5001:5000
      depends_on:
        - elasticsearch
      networks:
        - amundsennet
      environment:
        - PROXY_ENDPOINT=es_amundsen
      command: gunicorn -w 2 --bind :5000 search_service.search_wsgi
  amundsenmetadata:
      image: amundsendev/amundsen-metadata:3.3.0
      container_name: amundsenmetadata
      # depends_on:
      #   - neo4j
      ports:
        - 5002:5000
      networks:
        - amundsennet
      extra_hosts:
        - localhost:192.168.43.xx
      environment:
         - PROXY_HOST=bolt://localhost
      command: gunicorn -w 2 --bind :5000 metadata_service.metadata_wsgi
  amundsenfrontend:
      build:
        context: .
        args:
          SEARCHSERVICE_BASE: http://amundsensearch:5001
          METADATASERVICE_BASE: http://amundsenmetadata:5002
        dockerfile: Dockerfile.frontend.local
      container_name: amundsenfrontend
      depends_on:
        - amundsenmetadata
        - amundsensearch
      ports:
        - 5000:5000
      networks:
        - amundsennet
      volumes:
        - ./client_secrets.json:/client_secrets.json   
      environment:
        - SEARCHSERVICE_BASE=http://amundsensearch:5000
        - METADATASERVICE_BASE=http://amundsenmetadata:5000
        # Only for easy config-less Quickstart bookmark evalutation. `TestConfig` extends ordinary `LocalConfig` by
        # defining `AUTH_USER_METHOD` to a hardcoded dummy user in `amundsen_application.tests.test_utils.get_test_user()`
        # See further docs in https://github.com/amundsen-io/amundsenfrontendlibrary/blob/master/docs/configuration.md#flask
        # and https://github.com/amundsen-io/amundsenfrontendlibrary/blob/master/docs/configuration.md#authentication
        # - FRONTEND_SVC_CONFIG_MODULE_CLASS=amundsen_application.config.TestConfig
        - FLASK_APP_MODULE_NAME=flaskoidc
        - FLASK_APP_CLASS_NAME=FlaskOIDC
        - FRONTEND_SVC_CONFIG_MODULE_CLASS=amundsen_application.oidc_config.OidcConfig
        - FLASK_OIDC_WHITELISTED_ENDPOINTS=status,healthcheck,health
        - SQLALCHEMY_DATABASE_URI=sqlite:///sessions.db
        - SESSION_TYPE=sqlalchemy
        - APP_WRAPPER=flaskoidc
        - APP_WRAPPER_CLASS=FlaskOIDC
        - OIDC_CLIENT_SECRETS=/client_secrets.json
        - FLASK_OIDC_CLIENT_SECRETS=/client_secrets.json
        - FLASK_OIDC_SECRET_KEY=jgDn4-r9_XdEgK6U82rCuL_2
        - GOOGLE_CLIENT_ID=168332283266-3qaabrhtuscir0gs4jufjiv53viioura.apps.googleusercontent.com
        - GOOGLE_CLIENT_SECRET=jgDn4-r9_XdEgK6U82rCuL_2
        # - FLASK_OIDC_SECRET_KEY="$$(jq -r '.web.client_secret' "/client_secrets.json")"
        # - GOOGLE_CLIENT_ID="$$(jq -r '.web.client_id' "./client_secrets.json")"
        # - GOOGLE_CLIENT_SECRET="$$(jq -r '.web.client_secret' "/client_secrets.json")"

      # command: bash -c "echo 1111111111111111111111111111111111111111111111111111111111111"

networks:
  amundsennet:

volumes:
  es_data:
  neo4j_data:

